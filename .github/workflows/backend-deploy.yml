name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file for deployment
        working-directory: ./backend
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" >> .env
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
          echo "SERPER_API_KEY=${{ secrets.SERPER_API_KEY }}" >> .env
          echo "DEEPGRAM_API_KEY=${{ secrets.NEXT_PUBLIC_DEEPGRAM_API_KEY }}" >> .env


      - name: Zip backend files
        working-directory: ./backend
        run: zip -r ../backend-deployment-package.zip . -x "venv/*" "__pycache__/*" "*.pyc"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2 # Important: This must match your EC2 instance's region

      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "backend-deployment-package.zip"
          target: "/home/ubuntu"

      - name: SSH into EC2 and setup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Update and install required packages
            sudo apt-get update
            sudo apt-get install -y python3-pip python3-venv unzip nginx
            
            # Unzip the deployment package
            unzip -o backend-deployment-package.zip -d veritas-backend
            
            # Set up Python virtual environment and install dependencies
            cd veritas-backend
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            
            # Run database migrations
            alembic upgrade head
            
            # Start the application using a process manager
            # We'll use pm2, a popular choice for Node.js, but it works for Python too
            sudo npm install -g pm2
            pm2 stop uvicorn || true
            pm2 start "uvicorn main:app --host 0.0.0.0 --port 8000" --name uvicorn --interpreter venv/bin/python
            pm2 startup
            pm2 save